import processing.core.*; 
import processing.data.*; 
import processing.event.*; 
import processing.opengl.*; 

import java.util.HashMap; 
import java.util.ArrayList; 
import java.io.File; 
import java.io.BufferedReader; 
import java.io.PrintWriter; 
import java.io.InputStream; 
import java.io.OutputStream; 
import java.io.IOException; 

public class programmingAssngm3 extends PApplet {

// Programming Assignment 3
// this symbol just kind of came to me towards the end of last summer
// it symbolizes a lot to me... three in four... seven points... diamond cuts, 
// also i draw it with the inner triangle creating the V and sign it with the i/c 
// since my initials are ivc so it's become like my stamp i guess... 
// the shape I see with music, and design in general..
// I'd love to design speaker cabinets with this 3/4/7 formula etc.. 
// so I figured: DUH why not turn it into a function/object

float x = 0;
float y = 0; 
float xspeed = 0;
float yspeed = 0;

public void setup() {
  
  frameRate(1111);
}

public void draw() {
  background(0);
  
  cryptShape(x,y);
  shapeMove(x,y);
  translate(x,y);
  rotate(radians(90));
  
  cryptShape(x+xspeed,y+yspeed);
  shapeMove(x-xspeed,y-yspeed);
  translate(x,y);
  rotate(radians(180));

  cryptShape(x-xspeed,y+yspeed);
  shapeMove(x+xspeed,y-yspeed);
  translate(x,y);
  rotate(radians(270));
  
  cryptShape(x/2,y*2);
  shapeMove(x-xspeed,y-yspeed);
  translate(x,y);
  rotate(radians(180));
  
  cryptShape(-x,-y);
  shapeMove(-x,-y);
  translate(x,y);
  rotate(radians(90));
  
  xspeed = xspeed + 1;
  yspeed = yspeed - 1;

   
}

public void cryptShape(float x, float y) {// shape will adjust with changing window size
  stroke(191,255,191);
  strokeWeight(5);
  noFill();
  line(x+width/2,y,x,y+height/2);
  line(x+width/2,y,x+width,y+height/2);
  line(x,y+height/2,x+width/2,y+height);
  line(x+width,y+height/2,x+width/2,y+height);
  
  stroke(255,191,233);
  strokeWeight(6);
  line(x+width/2,y,x+width*0.17f,y+height*2/3);
  
  stroke(255,191,111);
  strokeWeight(6);
  line(x+width/2,y,x+width*0.823f,y+height*2/3);
  
  stroke(150,233,255);
  strokeWeight(7);
  line(x+width*0.17f,y+height*2/3,x+width*0.823f,y+height*2/3);
  
  stroke(150,233,255);
  line(x+width*0.34f,y+height*0.33f,x+width/2,y+height*0.666f);
  
  stroke(191,255,191);
  line(x+width*0.34f,y+height*0.33f,x+width*0.65f,y+height*0.33f);
  
  stroke(255,191,233);
  line(x+width*0.65f,y+height*0.33f,x+width/2,y+height*0.666f);
  
  line(x+width/2,y+height/2-99,x+width/2,y+height/2+33);
  
  stroke(255,191,111);
  ellipse(x+width/2,y+height/4-33,33,33);
  
  stroke(191,255,191);
  arc(x+width/2+33,y+height/3+123,333,333,radians(49),radians(277));
 
}


public void shapeMove(float x, float y) {
  cryptShape(x,y);
  cryptShape(xspeed,yspeed);
  cryptShape(xspeed*-0.1f,yspeed*0.1f);
  cryptShape(xspeed*0.1f,yspeed*-0.1f);
  cryptShape(-xspeed,-yspeed);
  cryptShape(-x,-y);
  
  xspeed = xspeed + 1;
  yspeed = yspeed - 1;
  
  if(x > width && y > height) {
  xspeed = xspeed * -0.1f;
  yspeed = yspeed * -0.1f;
  }
 
}
  public void settings() {  size(1000,666); }
  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "programmingAssngm3" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
